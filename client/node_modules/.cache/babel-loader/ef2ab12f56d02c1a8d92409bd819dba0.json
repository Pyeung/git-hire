{"ast":null,"code":"import _classCallCheck from \"/Users/romitchaudhari/bootcamp/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/romitchaudhari/bootcamp/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/romitchaudhari/bootcamp/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/romitchaudhari/bootcamp/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/romitchaudhari/bootcamp/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/romitchaudhari/bootcamp/git-hire/client/src/pages/Jobs.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar Jobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jobs, _Component);\n\n  function Jobs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Jobs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Jobs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobs: [],\n      title: \"\",\n      location: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Jobs, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   this.loadJobs();\n    // }\n    // loadJobs = () => {\n    //   API.getJobs()\n    //     .then(res =>\n    //       this.setState({ Jobs: res.data, jobs: \"\", title: \"\", location: \"\" })\n    //     )\n    //     .catch(err => console.log(err));\n    // };\n    // deleteJobs = id => {\n    //   API.deleteJobs(id)\n    //     .then(res => this.loadJobs())\n    //     .catch(err => console.log(err));\n    // };\n    // handleInputChange = event => {\n    //   const { name, value } = event.target;\n    //   this.setState({\n    //     [name]: value\n    //   });\n    // };\n    // handleFormSubmit = event => {\n    //   event.preventDefault();\n    //   if (this.state.title && this.state.location) {\n    //     API.saveJobs({\n    //       title: this.state.title,\n    //       location: this.state.location,\n    //     })\n    //       .then(res => this.loadJobs())\n    //       .catch(err => console.log(err));\n    //   }\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"What job should I apply for ?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Job Title (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.location,\n        onChange: this.handleInputChange,\n        name: \"Location\",\n        placeholder: \"Location (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.location && this.state.title),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Search\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Jobs On My List\")), this.state.title.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.Jobs.map(function (title) {\n        return React.createElement(ListItem, {\n          key: title._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/Jobs/\" + title._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, Jobs.title, \" by \", Jobs.location)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteJobs(title._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Jobs;\n}(Component);\n\nexport default Jobs;","map":{"version":3,"sources":["/Users/romitchaudhari/bootcamp/git-hire/client/src/pages/Jobs.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Jobs","state","jobs","title","location","handleInputChange","handleFormSubmit","length","map","_id","deleteJobs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Jobs extends Component {\n  state = {\n    jobs: [],\n    title: \"\",\n    location: \"\",\n  };\n\n  // componentDidMount() {\n  //   this.loadJobs();\n  // }\n\n  // loadJobs = () => {\n  //   API.getJobs()\n  //     .then(res =>\n  //       this.setState({ Jobs: res.data, jobs: \"\", title: \"\", location: \"\" })\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // deleteJobs = id => {\n  //   API.deleteJobs(id)\n  //     .then(res => this.loadJobs())\n  //     .catch(err => console.log(err));\n  // };\n\n  // handleInputChange = event => {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // };\n\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   if (this.state.title && this.state.location) {\n  //     API.saveJobs({\n  //       title: this.state.title,\n  //       location: this.state.location,\n  //     })\n  //       .then(res => this.loadJobs())\n  //       .catch(err => console.log(err));\n  //   }\n  // };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What job should I apply for ?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Job Title (Required)\"\n              />\n              <Input\n                value={this.state.location}\n                onChange={this.handleInputChange}\n                name=\"Location\"\n                placeholder=\"Location (Required)\"\n              />\n             \n              <FormBtn\n                disabled={!(this.state.location && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Search\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Jobs On My List</h1>\n            </Jumbotron>\n            {this.state.title.length ? (\n              <List>\n                {this.state.Jobs.map(title => (\n                  <ListItem key={title._id}>\n                    <Link to={\"/Jobs/\" + title._id}>\n                      <strong>\n                        {Jobs.title} by {Jobs.location}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteJobs(title._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Jobs;\n"]},"metadata":{},"sourceType":"module"}