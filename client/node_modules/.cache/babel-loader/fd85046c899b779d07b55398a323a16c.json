{"ast":null,"code":"import _defineProperty from \"/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./utils/API\";\nimport { RecipeList, RecipeListItem } from \"./components/RecipeList\";\nimport { Container, Row, Col } from \"./components/Grid\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobs: [],\n      jobTitle: \"\",\n      jobLocation: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleGithubSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n      event.preventDefault();\n      API.getGithubJobs(_this.state.jobTitle, _this.state.jobLocation).then(function (res) {\n        _this.setState({\n          jobs: res.data\n        });\n\n        console.log(_this.state.jobs);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleIndeedSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n      event.preventDefault();\n      API.getIndeedJobs(_this.state.jobTitle, _this.state.jobLocation).then(function (res) {\n        _this.setState({\n          jobs: res.data\n        });\n\n        console.log(_this.state.jobs);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleZiprecruiterSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n      event.preventDefault();\n      API.getZiprecruiterJobs(_this.state.jobTitle, _this.state.jobLocation).then(function (res) {\n        _this.setState({\n          jobs: res.data\n        });\n\n        console.log(_this.state.jobs);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleMonsterSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n      event.preventDefault();\n      API.getMonsterJobs(_this.state.jobTitle, _this.state.jobLocation).then(function (res) {\n        _this.setState({\n          jobs: res.data\n        });\n\n        console.log(_this.state.jobs);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleUSAJobsSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n      event.preventDefault();\n      API.getUSAJobs(_this.state.jobTitle, _this.state.jobLocation).then(function (res) {\n        // console.log(\"response data\",res)\n        _this.setState({\n          jobs: res.data\n        }); // console.log(this.state.jobs)\n\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"xs-9 sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"jobTitle\",\n        value: this.state.jobTitle,\n        onChange: this.handleInputChange,\n        placeholder: \"Job Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"jobLocation\",\n        value: this.state.jobLocation,\n        onChange: this.handleInputChange,\n        placeholder: \"Location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(Col, {\n        size: \"xs-3 sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleGithubSubmit,\n        type: \"success\",\n        className: \"input-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Search Github\"), React.createElement(Button, {\n        onClick: this.handleIndeedSubmit,\n        type: \"success\",\n        className: \"input-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Search Indeed\"), React.createElement(Button, {\n        onClick: this.handleZiprecruiterSubmit,\n        type: \"success\",\n        className: \"input-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Search Zip Recruiter\"), React.createElement(Button, {\n        onClick: this.handleMonsterSubmit,\n        type: \"success\",\n        className: \"input-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Search Monster\"), React.createElement(Button, {\n        onClick: this.handleUSAJobsSubmit,\n        type: \"success\",\n        className: \"input-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Search USA Jobs\"))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, !this.state.jobs.length ? React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"No Jobs to Display\") : React.createElement(RecipeList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.jobs.map(function (job) {\n        return React.createElement(RecipeListItem, {\n          key: job.id,\n          title: job.title,\n          href: job.url,\n          description: job.description,\n          thumbnail: job.company_logo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/trainguyen/GTBootCamp/Assignments/git-hire/client/src/App.js"],"names":["React","Component","Jumbotron","Nav","Input","Button","API","RecipeList","RecipeListItem","Container","Row","Col","App","state","jobs","jobTitle","jobLocation","handleInputChange","event","target","name","value","setState","handleGithubSubmit","preventDefault","getGithubJobs","then","res","data","console","log","catch","err","handleIndeedSubmit","getIndeedJobs","handleZiprecruiterSubmit","getZiprecruiterJobs","handleMonsterSubmit","getMonsterJobs","handleUSAJobsSubmit","getUSAJobs","length","map","job","id","title","url","description","company_logo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./utils/API\";\nimport { RecipeList, RecipeListItem } from \"./components/RecipeList\";\nimport { Container, Row, Col } from \"./components/Grid\";\n\nclass App extends Component {\n  state = {\n    jobs: [],\n    jobTitle: \"\",\n    jobLocation: \"\"\n  };\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleGithubSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.getGithubJobs(this.state.jobTitle, this.state.jobLocation)\n      .then(res => {\n        this.setState({ jobs: res.data })\n        console.log(this.state.jobs)\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleIndeedSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.getIndeedJobs(this.state.jobTitle, this.state.jobLocation)\n      .then(res => {\n        this.setState({ jobs: res.data })\n        console.log(this.state.jobs)\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleZiprecruiterSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.getZiprecruiterJobs(this.state.jobTitle, this.state.jobLocation)\n      .then(res => {\n        this.setState({ jobs: res.data })\n        console.log(this.state.jobs)\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleMonsterSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.getMonsterJobs(this.state.jobTitle, this.state.jobLocation)\n      .then(res => {\n        this.setState({ jobs: res.data })\n        console.log(this.state.jobs)\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleUSAJobsSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.getUSAJobs(this.state.jobTitle, this.state.jobLocation)\n      .then(res => {\n        // console.log(\"response data\",res)\n        this.setState({ jobs: res.data })\n        // console.log(this.state.jobs)\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Jumbotron />\n        <Container>\n          <Row>\n            <Col size=\"md-12\">\n              <form>\n                <Container>\n                  <Row>\n                    <Col size=\"xs-9 sm-10\">\n                      <Input\n                        name=\"jobTitle\"\n                        value={this.state.jobTitle}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Job Title\"\n                      />\n                      <Input\n                        name=\"jobLocation\"\n                        value={this.state.jobLocation}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Location\"\n                      />\n                    </Col>\n                    <Col size=\"xs-3 sm-2\">\n                      {/* Search in Github */}\n                      <Button\n                        onClick={this.handleGithubSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search Github\n                      </Button>\n                      {/* Search in Indeed */}\n                      <Button\n                        onClick={this.handleIndeedSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search Indeed\n                      </Button>\n                      {/* Search in ZipRecruiter */}\n                      <Button\n                        onClick={this.handleZiprecruiterSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search Zip Recruiter\n                      </Button>\n                      {/* Search in Monster */}\n                      <Button\n                        onClick={this.handleMonsterSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search Monster\n                      </Button>\n\n                      {/* Search in USAJobs */}\n                      <Button\n                        onClick={this.handleUSAJobsSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search USA Jobs\n                      </Button>\n                    </Col>\n                  </Row>\n                </Container>\n              </form>\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"xs-12\">\n              {!this.state.jobs.length ? (\n                <h1 className=\"text-center\">No Jobs to Display</h1>\n              ) : (\n                <RecipeList>\n                  {this.state.jobs.map(job => {\n                    return (\n                      <RecipeListItem\n                        key={job.id}\n                        title={job.title}\n                        href={job.url}\n                        description={job.description}\n                        thumbnail={job.company_logo}\n                      />\n                    );\n                  })}\n                </RecipeList>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}